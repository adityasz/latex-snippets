global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal


snippet template "Basic template" b
%! TeX program = xelatex
\documentclass[a4paper]{article}

% \usepackage{fontspec}
% 	 % \setmainfont{TeX Gyre Termes}
% 	 \setmonofont{JetBrains Mono}[Scale = MatchLowercase]
%  	 % https://download.jetbrains.com/fonts/JetBrainsMono-2.304.zip
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{hyperref}
\usepackage{amsmath, amsfonts, mathtools, amsthm, amssymb}
\usepackage[usenames,dvipsnames]{xcolor}
	\definecolor{link-color}{HTML}{3584E3}
\usepackage{url}
\usepackage{hyperref}
	\hypersetup{
		pdfauthor={Aditya Singh},
		pdftitle={},
		pdfsubject={},
		pdfproducer={},
		hidelinks,
		colorlinks,
		linkcolor=link-color,
		citecolor=link-color,
		urlcolor=link-color,
		anchorcolor=link-color
	}
\usepackage{graphicx}
\usepackage{float}
\usepackage{subcaption}
\usepackage{mathrsfs}
\usepackage{cancel}
\usepackage{parskip}
\usepackage{caption}
\usepackage{upgreek}
\usepackage{booktabs}
\usepackage{tikz}

\begin{document}
	$0
\end{document}
endsnippet

snippet today "Date"
`date +%F`
endsnippet

snippet box "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet mono "texttt{}" i
\\texttt{$1}$0
endsnippet

snippet it "textit{}" i
\\textit{$1}$0
endsnippet

snippet bf "textbf{}" i
\\textbf{$1}$0
endsnippet

context "math()"
priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet tablef "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet table "tabular environment" b
\begin{tabular}{${1:l l}}
	$2
\end{tabular}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

context "math()"
snippet => "implies" Ai
\implies
endsnippet

context "math()"
snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

# snippet mk "Math" wA
# $${1}$`!p
# if t[2] and t[2][0] not in [',', '.', '?', '-', ' ', ')', ']', '\'', '}']:
# 	snip.rv = ' '
# else:
# 	snip.rv = ''
# `$2
# endsnippet

snippet mk "Math" wA
$${1}$$2
endsnippet

snippet dm "Math" wA
\[
	${1:${VISUAL}}
\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

snippet eqn "Labelled equation" bA
\begin{equation} \label{$1}
	$2
\end{equation}
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

# snippet / "Fraction" i
# \\frac{${VISUAL}}{$1}$0
# endsnippet

# context "math()"
# snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
# \\frac{`!p snip.rv = match.group(1)`}{$1}$0
# endsnippet

# priority 1000
# context "math()"
# snippet '^.*\)/' "() frac" wrA
# `!p
# stripped = match.string[:-1]
# depth = 0
# i = len(stripped) - 1
# while True:
# 	if stripped[i] == ')': depth += 1
# 	if stripped[i] == '(': depth -= 1
# 	if depth == 0: break;
# 	i-=1
# snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
# `{$1}$0
# endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

context "math()"
snippet == "equals" iA
&=$1 \\\\
endsnippet

context "math()"
snippet != "equals" iA
\neq
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil$0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix}$0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix}$0
endsnippet

context "math()"
snippet () "left( right)" iA
\left(${1:${VISUAL}}\right)$0
endsnippet

context "math()"
snippet lr "left( right)" i
\left(${1:${VISUAL}} \right)$0
endsnippet

context "math()"
snippet lr( "left( right)" i
\left(${1:${VISUAL}}\right)$0
endsnippet

context "math()"
snippet lr| "left| right|" i
\left|${1:${VISUAL}}\right|$0
endsnippet

context "math()"
snippet lr{ "left\{ right\}" i
\left\\{${1:${VISUAL}}\right\\}$0
endsnippet

context "math()"
snippet lrb "left\{ right\}" i
\left\\{${1:${VISUAL}}\right\\}$0
endsnippet

context "math()"
snippet lr[ "left[ right]" i
\left[${1:${VISUAL}}\right]$0
endsnippet

context "math()"
snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}}\right>$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

context "math()"
snippet sum "sum" w
\sum_{${1:n=${2:1}}}^{${3:\infty}} ${4:a_n z^n}
endsnippet

context "math()"
snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}}$0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet ^^ "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

context "math()"
snippet <= "leq" iA
\le
endsnippet

context "math()"
snippet >= "geq" iA
\ge
endsnippet

context "math()"
snippet := "define" iA
\coloneqq
endsnippet

context "math()"
snippet EE "exists" iA
\exists
endsnippet

context "math()"
snippet AA "forall" iA
\forall
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet


context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

context "math()"
snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla
endsnippet

context "math()"
snippet xx "cross" iA
\times
endsnippet

priority 100
snippet ** "cdot" iA
\cdot
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
# snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet


priority 100
context "math()"
snippet -> "to" iA
\to
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet |> "mapsto" iA
\mapsto
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

context "math()"
snippet >> ">>" iA
\gg
endsnippet

context "math()"
snippet << "<<" iA
\ll
endsnippet


context "math()"
snippet ~~ "~" iA
\sim
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\}$0
endsnippet

#snippet || "mid" iA
# \mid
#endsnippet


context "math()"
snippet cc "subset" Ai
\subset
endsnippet

context "math()"
snippet notin "not in " iA
\not\in
endsnippet

context "math()"
snippet inn "in " iA
\in
endsnippet

context "math()"
snippet NN "n" iA
\N
endsnippet

context "math()"
snippet Nn "cap" iA
\cap
endsnippet

context "math()"
snippet UU "cup" iA
\cup
endsnippet

context "math()"
snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

context "math()"
snippet OO "emptyset" iA
\O
endsnippet

context "math()"
snippet RR "real" iA
\R
endsnippet

context "math()"
snippet CC "complex" iA
\C
endsnippet

context "math()"
snippet QQ "Q" iA
\Q
endsnippet

context "math()"
snippet ZZ "Z" iA
\Z
endsnippet

context "math()"
snippet <! "normal" iA
\triangleleft
endsnippet

context "math()"
snippet <> "hokje" iA
\diamond
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

context "math()"
snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

snippet cvec "column vector" iA
\begin{bmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{bmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "hbar" "hbar" riA
\hbar
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])tilde" "tilde" riA
\tilde{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "([A-Z])scr" "scr" riA
\mathscr{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "([A-Z])cal" "cal" riA
\mathcal{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "(\\?\w+)dot" "dot" ri
\dot{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "(\\?\w+)ddot" "ddot" riA
\ddot{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "(\\?\w+)dddot" "dddot" riA
\dddot{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

context "math()"
snippet HH "H" iA
\mathbb{H}
endsnippet

context "math()"
snippet DD "D" iA
\mathbb{D}
endsnippet

priority 100
context "math()"
snippet "(\\?\w+)(\.\/|\/\.)" "differential" riA
\mathrm{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "(\\?\w+)(,\.)" "boldsymbol" riA
\boldsymbol{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "(\\?\w+)(\.,)" "vector postfix" riA
\mathbf{`!p snip.rv=match.group(1)`}
endsnippet

# priority 100
# context "math()"
# snippet "(\\?\w+)(,\.|\.,)" "vector postfix" riA
# \boldsymbol{`!p snip.rv=match.group(1)`}
# endsnippet

# priority 99
# context "math()"
# snippet "(\w+)(,\.|\.,)" "vector postfix" riA
# \mathbf{`!p snip.rv=match.group(1)`}
# endsnippet

snippet fdvs "finite dimensional vector space" iA
finite dimensional vector space
endsnippet

snippet fdips "finite dimensional inner product space" iA
finite dimensional inner product space
endsnippet

context "math()"
snippet "\<(.*?), (.*?)\>" "inner product" riA
\langle `!p snip.rv = match.group(1)`, `!p snip.rv = match.group(2)` \rangle
endsnippet

# context "math()"
# snippet < "langle" iA
# \langle 
# endsnippet

# context "math()"
# snippet > "rangle" iA
#  \rangle
# endsnippet

# vim:ft=snippets

# Greek letters
# context "math()"
# snippet alpha "alpha" iA
# \alpha
# endsnippet

# context "math()"
# snippet beta "beta" iA
# \beta
# endsnippet

# context "math()"
# snippet gamma "gamma" iA
# \gamma
# endsnippet

# context "math()"
# snippet delta "delta" iA
# \delta
# endsnippet

# context "math()"
# snippet epsilon "epsilon" iA
# \epsilon
# endsnippet

# context "math()"
# snippet zeta "zeta" iA
# \zeta
# endsnippet

# Creates conflicts (theta, zeta, etc.)
# context "math()"
# snippet eta "eta" iA
# \eta
# endsnippet

# context "math()"
# snippet theta "theta" iA
# \theta
# endsnippet

# context "math()"
# snippet iota "iota" iA
# \iota
# endsnippet

# context "math()"
# snippet kappa "kappa" iA
# \kappa
# endsnippet

# # E_{\lambda}
# # context "math()"
# # snippet lambda "lambda" iA
# # \lambda
# # endsnippet

# context "math()"
# snippet mu "mu" iA
# \mu
# endsnippet

# context "math()"
# snippet nu "nu" iA
# \nu
# endsnippet

# context "math()"
# snippet xi "xi" iA
# \xi
# endsnippet

# context "math()"
# snippet omicron "omicron" iA
# \omicron
# endsnippet

# context "math()"
# snippet pi "pi" iA
# \pi
# endsnippet

# context "math()"
# snippet rho "rho" iA
# \rho
# endsnippet

# context "math()"
# snippet sigma "sigma" iA
# \sigma
# endsnippet

# context "math()"
# snippet tau "tau" iA
# \tau
# endsnippet

# context "math()"
# snippet upsilon "upsilon" iA
# \upsilon
# endsnippet

# context "math()"
# snippet phi "phi" iA
# \phi
# endsnippet

# context "math()"
# snippet chi "chi" iA
# \chi
# endsnippet

# context "math()"
# snippet psi "psi" iA
# \psi
# endsnippet

# context "math()"
# snippet omega "omega" iA
# \omega
# endsnippet

# context "math()"
# snippet Alpha "Alpha" iA
# \Alpha
# endsnippet

# context "math()"
# snippet Beta "Beta" iA
# \Beta
# endsnippet

# context "math()"
# snippet Gamma "Gamma" iA
# \Gamma
# endsnippet

# context "math()"
# snippet Delta "Delta" iA
# \Delta
# endsnippet

# context "math()"
# snippet Epsilon "Epsilon" iA
# \Epsilon
# endsnippet

# context "math()"
# snippet Zeta "Zeta" iA
# \Zeta
# endsnippet

# context "math()"
# snippet Eta "Eta" iA
# \Eta
# endsnippet

# context "math()"
# snippet Theta "Theta" iA
# \Theta
# endsnippet

# context "math()"
# snippet Iota "Iota" iA
# \Iota
# endsnippet

# context "math()"
# snippet Kappa "Kappa" iA
# \Kappa
# endsnippet

# context "math()"
# snippet Lambda "Lambda" iA
# \Lambda
# endsnippet

# context "math()"
# snippet Mu "Mu" iA
# \Mu
# endsnippet

# context "math()"
# snippet Nu "Nu" iA
# \Nu
# endsnippet

# context "math()"
# snippet Xi "Xi" iA
# \Xi
# endsnippet

# context "math()"
# snippet Omicron "Omicron" iA
# \Omicron
# endsnippet

# context "math()"
# snippet Pi "Pi" iA
# \Pi
# endsnippet

# context "math()"
# snippet Rho "Rho" iA
# \Rho
# endsnippet

# context "math()"
# snippet Sigma "Sigma" iA
# \Sigma
# endsnippet

# context "math()"
# snippet Tau "Tau" iA
# \Tau
# endsnippet

# context "math()"
# snippet Upsilon "Upsilon" iA
# \Upsilon
# endsnippet

# context "math()"
# snippet Phi "Phi" iA
# \Phi
# endsnippet

# context "math()"
# snippet Chi "Chi" iA
# \Chi
# endsnippet

# context "math()"
# snippet Psi "Psi" iA
# \Psi
# endsnippet

# context "math()"
# snippet Omega "Omega" iA
# \Omega
# endsnippet

# context "math()"
# snippet varepsilon "varepsilon" iA
# \varepsilon
# endsnippet

# context "math()"
# snippet varphi "varphi" iA
# \varphi
# endsnippet

# Quantum Mechanics
# snippet "\<(.*?)\|" "bra" riA
# \bra{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
# endsnippet

# snippet "\|(.*?)\>" "ket" riA
# \ket{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
# endsnippet

# snippet "(.*)\\bra{(.*?)}([^\|]*?)\>" "braket" riA
# `!p snip.rv = match.group(1)`\braket{`!p snip.rv = match.group(2)`}{`!p snip.rv = match.group(3).replace('q', f'\psi').replace('f', f'\phi')`}
# endsnippet

# context "math()"
# snippet dagger "dagger" iA
# ^\dagger
# endsnippet
